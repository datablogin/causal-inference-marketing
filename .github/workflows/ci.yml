name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Global workflow timeout as safety net
run-name: "CI Pipeline ${{ github.run_number }}"
defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent runaway tests
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --extra dev --extra test --extra ml
    
    - name: Run linting
      run: |
        uv run ruff check libs/causal_inference/ services/ shared/
    
    - name: Run formatting check
      run: |
        uv run ruff format --check libs/causal_inference/ services/ shared/
    
    - name: Run type checking
      run: |
        uv run mypy libs/causal_inference/ shared/
    
    - name: Run tests
      timeout-minutes: 10  # Most tests should complete quickly
      run: |
        uv run pytest libs/causal_inference/tests/ --cov=libs/causal_inference/causal_inference --cov=shared --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Security scans should be quick
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: |
        uv sync --extra dev
    
    - name: Run security scan
      run: |
        uv run safety check || echo "Security scan completed with warnings"

  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Docker builds can take longer
    steps:
    - uses: actions/checkout@v4

    - name: Install docker-compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Test Docker build (causal-api)
      run: |
        docker build -f docker/Dockerfile.causal-api -t causal-api:test .
    
    - name: Test Docker compose
      run: |
        docker-compose -f docker/docker-compose.yml config
